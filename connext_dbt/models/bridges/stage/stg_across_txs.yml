version: 2

models:      
  - name: stg_across_txs
    description: >
      Extracts distinct transfer records from `source_across_v3_txs` for the staging layer in the Connext DBT model.

      **Calclation and modification:**

        - **Final Amounts Anchor Formulas:**
        
          - to_amount = from_amount - relay_amount
          - gas_amount is kept seperate, as it is not part of amounts sent and paid by user seperately!

        - **V3:**
          - from_amount -> In across v3 raw data represent the sent amount, without any calculations from our side.
          - to_amount -> in across v3 raw data represent the received amount, without any calculations from our side.
          - gas_amount -> Not available in raw data.
          - relay_fee_amount -> Calculated as `from_amount - to_amount`. Relay fee token is same as from token.

        - **V2:**
          - from_amount -> In across v2 raw data represent the sent amount, without any calculations from our side.
          - to_amount -> Caculated as, `from_amount * (1 -relay_fee_amount - lp_fee_amount)`
          - gas_amount -> Not available in raw data.
          - relay_fee_amount -> Calculated as `from_amount - to_amount`. Relay fee token is same as from token.

      ## Data QA report
      {{ doc("dbt_profiler__stg_across_txs") }}
      


      **Sample Data:**

        - "bridge": "across_v2",
        - "id": "1633786",
        - "date": "2024-01-29 10:15:05.000000 UTC",
        - "from_hash": null,
        - "from_user": "0xadde7028e7ec226777e5dea5d53f6457c21ec7d6",
        - "from_chain_id": "324",
        - "from_chain_name": "zksync",
        - "from_token_address": "0x7f5c764cbc14f9669b88837ca1490cca17c31607",
        - "from_token_symbol": "USDC.e",
        - "from_amount": "28.29",
        - "to_hash": "0xb9a3f0dfdf5b54d2bb7b5bd4d612febddb6a09224430b4df839aec3a0caca16e",
        - "to_user": "0x57621be82ad0e3b7ac708641c64ca2b3bcc659bc",
        - "to_chain_id": "10",
        - "to_chain_name": "optimism",
        - "to_token_address": "0x7f5c764cbc14f9669b88837ca1490cca17c31607",
        - "to_token_symbol": "USDC.e",
        - "to_amount": "28.11335247745858",
        - "gas_token_symbol": null,
        - "gas_amount": null,
        - "relayer_fee_token_symbol": "USDC.e",
        - "relay_fee_amount": "0.17664752254141902",
        - "relay_fee_usd": null

    columns:
      - name: id
        description: "Unique transaction identifier (e.g., 1)"
        data_type: string
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: date
        description: "Timestamp of the transaction (e.g., 2024-05-28 23:35:19.000 UTC)"
        data_type: timestamp
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp
      - name: from_hash
        description: "Transaction hash from the source chain (e.g., null)"
        data_type: STRING | null
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: from_user
        description: "User address from which the transaction originated (e.g., 0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: from_chain_id
        description: "ID of the source chain (e.g., 10 for Optimism)"
        data_type: int64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int64
      - name: from_chain_name
        description: "Name of the source blockchain (e.g., Optimism)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: from_token_address
        description: "Address of the token on the source chain (e.g., 0x94b008aa00579c1307b0ef2c499ad98a8ce58e58)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: from_token_symbol
        description: "Symbol of the token on the source chain (e.g., USDT)"
        data_type: string
        tests:  
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: from_amount
        description: "Amount of tokens transferred from the source chain (e.g., 5803.073853)"
        data_type: float64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: float64
      - name: to_hash
        description: "Transaction hash to the destination chain (e.g., 0x75d6d0cdb90b0b35b6a0c42fa1c5ba253e2d60c6695cc6d9e665bccba29a7f51)"   
        data_type: STRING | null
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: to_user
        description: "User address to which the transaction is sent (e.g., 0x2457c54c2b31625ef6b80175d06b07bd7caafa38)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: to_chain_id
        description: "ID of the destination chain (e.g., 59144 for Linea)"
        data_type: int64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int64
      - name: to_chain_name
        description: "Name of the destination blockchain (e.g., Linea)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: to_token_address
        description: "Address of the token on the destination chain (e.g., 0xa219439258ca9da29e9cc4ce5596924745e12b93)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: to_token_symbol
        description: "Symbol of the token on the destination chain (e.g., USDT)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: to_amount
        description: "Amount of tokens transferred to the destination chain (e.g., 0.00580021638)"
        data_type: float64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: float64
      - name: gas_token_symbol
        description: "Symbol of the gas token used for the transaction (e.g., ETH)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: gas_amount
        description: "Amount of gas used for the transaction (e.g., 1.8081366254487e-05)"
        data_type: float64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: float64
      - name: relayer_fee_token_symbol
        description: "Symbol of the relayer fee token (e.g., USDT)"
        data_type: string
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: string
      - name: relay_fee_amount
        description: "Amount of relayer fees (e.g., null)"
        data_type: float64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: float64
      - name: relay_fee_usd
        description: "USD value of the relayer fees (e.g., 2.8574347316898638)"
        data_type: float64
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: float64